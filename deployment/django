# Install PIP and Virtualenv

sudo aptitude install python-pip
sudo pip install pip --upgrade
sudo pip install virtualenv

# Install Nginx

sudo aptitude install python-software-properties
sudo add-apt-repository ppa:nginx/stable
sudo aptitude update
sudo aptitude install nginx
sudo ln -s nginx.conf /etc/nginx/nginx.conf
sudo rm /etc/nginx/sites-enabled/default
sudo ln -s mavenize-nginx /etc/nginx/sites-enabled/

# Configure IPTables

sudo iptables -A INPUT -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT
sudo iptables -I INPUT 1 -p tcp  --dport 22 -j ACCEPT
sudo iptables -I INPUT 1 -p tcp --dport 80 -j ACCEPT
sudo iptables -I INPUT 1 -p tcp --dport 443 -j ACCEPT
sudo iptables -I INPUT 1 -p tcp --dport 6379 -j ACCEPT
sudo iptables -I INPUT 1 -p tcp --dport 6600 -j ACCEPT
sudo iptables -I INPUT 1 -p tcp --dport 8983 -j ACCEPT
sudo iptables -P INPUT DROP
sudo sh -c "iptables-save > /etc/iptables.rules"

# Install PostgreSQL Client
sudo aptitude install postgresql-client

# Configure Environment Variable for Django
sudo sh -c 'echo "DEPLOYMENT_TYPE=production" >> /etc/environment'

# Install Git
sudo aptitude install git-core

# Setup SSH Key
ssh-keygen -t rsa -C "YOUREMAIL@DOMAIN.COM"
# Add to Github SSH Keys
git config --global user.name "YOURNAME"
git config --global user.email "YOUREMAIL@DOMAIN.COM"
gi
# Virtual Environment Prerequisites
sudo aptitude install libpq-dev python-dev libjpeg62-dev

# Setup Virtual Environment
git clone git@github.com:sameenjalal/mavenize-beta.git
virtualenv env
source env/bin/activate
pip install -r requirements/common.txt
pip install -r requirements/production.txt

# Setup Supervisor
gunicorn -c deployment/gunicorn.conf.py mavenize.wsgi:application

# Install NVM, Node and Less
sudo aptitude install build-essential curl libssl-dev openssl-dev
git clone git://github.com/creationix/nvm.git ~/nvm
echo . ~/nvm/nvm.sh >> ~/.bashrc
nvm install v0.6.18
nvm alias default v0.6.18
npm install less
sudo ln -s ~/node_modules/less/bin/lessc ~/mavenize-beta/env/bin/lessc
